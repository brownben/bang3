{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Bang",
  "scopeName": "source.bang",

  "patterns": [
    {
      "include": "#expression"
    }
  ],

  "repository": {
    "expression": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#punctuation"
        }
      ]
    },

    "comments": {
      "name": "comment.line.bang",
      "match": "(//).*$",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.bang"
        }
      }
    },

    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bang",
          "match": "\\b(if|else|match|return)\\b"
        },
        {
          "name": "constant.language.boolean.true.bang",
          "match": "\\b(true)\\b"
        },
        {
          "name": "constant.language.boolean.false.bang",
          "match": "\\b(false)\\b"
        },
        {
          "name": "storage.type.bang",
          "match": "\\b(let)\\b"
        },
        {
          "name": "keyword.control.import.bang",
          "match": "\\b(import|from|as)\\b"
        }
      ]
    },

    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.logical.symbols.bang",
          "match": "\\!|&&|\\|\\|"
        },
        {
          "name": "keyword.operator.logical.words.bang",
          "match": "\\b(and|or)\\b"
        },
        {
          "name": "keyword.operator.patterns.bang",
          "match": "\\.\\.|\\->|\\|"
        },
        {
          "name": "keyword.operator.comparison.bang",
          "match": "\\!=|==|(>=)|(<=)|(>)|(<)"
        },
        {
          "name": "keyword.operator.numeric.bang",
          "match": "\\+|\\-|\\*|\\/|\\%"
        },
        {
          "name": "keyword.operator.strings.bang",
          "match": "\\+\\+"
        }
      ]
    },

    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.bang",
          "begin": "\"",
          "end": "\""
        },
        {
          "name": "string.quoted.single.bang",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.quoted.backtick.bang",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "begin": "{",
              "end": "}",
              "name": "meta.interpolation.bang",
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            }
          ]
        }
      ]
    },

    "numbers": {
      "name": "constant.numeric.bang",
      "match": "\\b\\d[\\d_]*(\\.?)[\\d_]*\\b",
      "captures": {
        "1": {
          "name": "punctuation.separator.dot.decimal.bang"
        }
      }
    },

    "variables": {
      "patterns": [
        {
          "match": "([_a-zA-Z][_a-zA-Z0-9]*?)\\(",
          "captures": {
            "1": { "name": "entity.name.function.call.bang" }
          }
        },
        {
          "name": "variable.other.bang",
          "match": "\\b[a-z0-9_]+\\b"
        }
      ]
    },

    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.brackets.curly.bang",
          "match": "[{}]"
        },
        {
          "name": "punctuation.brackets.round.bang",
          "match": "[()]"
        }
      ]
    }
  }
}
